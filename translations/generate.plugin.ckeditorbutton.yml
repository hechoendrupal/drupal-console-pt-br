description: 'Gerar um Plugin de botão CKEditor.'
help: 'O <info>generate:plugin:ckeditorbutton</info> ajuda você a gerar um novo plugin de botão CKEditor.'
welcome: 'Bem vindo ao Gerador de Plugin de botão Drupal CKEditor.'
options:
    module: common.options.module
    class: 'Nome da classe do Plugin'
    label: 'Plugin label'
    plugin-id: 'Plugin ID. Observação: Corresponde ao name do Plugin CKEditor. É o primeiro argumento da função CKEDITOR.plugins.add() no arquivo plugin.js.'
    buttons: 'CKEditor buttons.'
    button-properties: 'Enter a new button properties.'
    button-name: 'Nome do botão. Observação: Corresponde ao nome do botão do Plugin CKEditor. É o primeiro argumento da função editor.ui.addButton() ou editor.ui.addRichCombo() no arquivo plugin.js.'
    button-icon-path: 'Path do Ícone do Botão. É o caminho do ícone/imagem do botão.'
questions:
    module: common.questions.module
    class: 'Digite o nome da classe do plugin'
    label: 'Digite o plugin label'
    plugin-id: 'Digite o Plugin ID. Observação: Isso corresponde ao nome do CKEditor Plugin. É o primeiro argumento da função CKEDITOR.plugins.add() no arquivo plugin.js.'
    button-name: 'Digite o nome do botão. Observação: Isso corresponde ao nome do botão. O primeiro argumento da função editor.ui.addButton() ou editor.ui.addRichCombo() no arquivo plugin.js.'
    button-icon-path: 'Digite o caminho do ícone do botão'
    button-label: 'Enter the button label'
    button-add: 'Do you want to add another button?'
examples:
    -
        description: 'Generate CKEditor button specifying the module name, the class, the label, its id, the button name and the icon path'
        execution: "drupal generate:plugin:ckeditorbutton  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultCKEditorButton\"  \\\n  --label=\"Default ckeditor button\"  \\\n  --plugin-id=\"default ckeditor button\"  \\\n  --button-name=\"Default ckeditor button\"  \\\n  --button-icon-path=\"modules/custom/modulename/js/plugins/default ckeditor button/images/icon.png\""
